---
title: Extras
---

{{! ----------------------------------------------------------------- }}

<h2>Extra demos</h2>

<ul>
  <li><a href="https://codepen.io/desandro/full/jEpxqJ">Image carousel with fancy selected style</a></li>
  <li>
    <a href="https://codepen.io/desandro/pen/dPdVNM">Setting image caption</a> or
    <a href="https://codepen.io/desandro/pen/OPQxpO">with vanilla JS</a>
  </li>
  <li>
    <a href="https://codepen.io/desandro/pen/pvxONO">Select cell on staticClick</a> or
    <a href="https://codepen.io/desandro/pen/OPBoWx">with vanilla JS</a>
  </li>
  <li><a href="https://codepen.io/desandro/pen/dMjbjR">Vertical scrollable navigation on the side</a></li>
  <li>
    <a href="https://codepen.io/desandro/pen/VYVEbM">Set initial focus on Flickity carousel</a> or
    <a href="https://codepen.io/desandro/pen/JoemRR">with vanilla JS</a>,
    so that carousel can be keyboard navigated on initial page load
  </li>
  <li><a href="https://codepen.io/desandro/pen/LVVqBR">Previous &amp; next buttons in top right corner</a></li>
  <li>
    <a href="https://codepen.io/desandro/pen/MagWrN">Adding <code>is-previous</code> and <code>is-next</code> cell classes</a> or
    <a href="https://codepen.io/desandro/pen/wWQQwN">with <code>wrapAround</code></a>
  </li>
  <li><a href="https://codepen.io/desandro/pen/KVwVqa/">Fade in carousel for no Flash Of Unstyled Content (FOUC)</a> or
    <a href="https://codepen.io/desandro/pen/JGoGpm">with vanilla JS</a>
  </li>
  <li><a href="https://codepen.io/desandro/pen/xZWqWM/">Disabling &amp; enabling dragging</a>
    or <a href="https://codepen.io/desandro/pen/adYJEQ/">with vanilla JS</a></li>
  <li><a href="https://codepen.io/desandro/pen/xVBpqG">Set options at media queries</a></li>
  <li><a href="https://codepen.io/desandro/pen/EWbqxa/">Detecting user-triggered select events</a>, excluding autoPlay and resize-triggered</li>
  <li><a href="https://codepen.io/desandro/pen/ZXEGVq">Equal cell heights hack</a></li>
  <li><a href="https://codepen.io/desandro/pen/gvKKrN/">Set custom autoPlay intervals per slide</a></li>
  <li><a href="https://codepen.io/grimcap/pen/XWbdjWa">Current slide / total number of slides CSS only</a></li>
</ul>

{{! ----------------------------------------------------------------- }}

<h2>Custom navigation UI</h2>

<p>With the <a href="api.html">Flickity API</a>, you can build custom carousel navigation UI.</p>

<div class="example duo">
  <div class="example__code duo__cell">
    ``` js
    // init Flickity
    var $carousel = $('.carousel').flickity({
      prevNextButtons: false,
      pageDots: false
    });
    // Flickity instance
    var flkty = $carousel.data('flickity');
    // elements
    var $cellButtonGroup = $('.button-group--cells');
    var $cellButtons = $cellButtonGroup.find('.button');

    // update selected cellButtons
    $carousel.on( 'select.flickity', function() {
      $cellButtons.filter('.is-selected')
        .removeClass('is-selected');
      $cellButtons.eq( flkty.selectedIndex )
        .addClass('is-selected');
    });

    // select cell on button click
    $cellButtonGroup.on( 'click', '.button', function() {
      var index = $(this).index();
      $carousel.flickity( 'select', index );
    });
    // previous
    $('.button--previous').on( 'click', function() {
      $carousel.flickity('previous');
    });
    // next
    $('.button--next').on( 'click', function() {
      $carousel.flickity('next');
    });
    ```
  </div>
  {{> custom-nav }}
</div>

{{! ----------------------------------------------------------------- }}

<h2>Module loaders</h2>

{{! ----------------------------------------------------------------- }}

<h3>Webpack</h3>

<p>Install Flickity with npm.</p>

``` bash
npm install flickity
```

<p>You can then <code>require('flickity')</code>.</p>

``` js
// main.js
var Flickity = require('flickity');

var flkty = new Flickity( '.carousel', {
  // options...
});
```

<p>Run <code>webpack</code>.</p>

``` bash
webpack main.js bundle.js
```

<p>Install and require add-on features for <code>imagesLoaded</code>, <code>asNavFor</code>, <code>fullscreen</code>, <code>bgLazyLoad</code>, and <code>hash</code>.</p>

``` bash
npm install flickity-imagesloaded
npm install flickity-fullscreen
```

``` js
var Flickity = require('flickity');
require('flickity-imagesloaded');
require('flickity-fullscreen');

// now use imagesLoaded and fullscreen
var flkty = new Flickity( '.carousel', {
  imagesLoaded: true,
  fullscreen: true,
});
```

<p>To use Flickity as a jQuery plugin with Webpack, you need to call <a href="https://www.npmjs.com/package/jquery-bridget">jQuery Bridget</a> and <code>Flickity.setJQuery()</code>.</p>

``` bash
npm install jquery-bridget
```

``` js
var $ = require('jquery');
var jQueryBridget = require('jquery-bridget');
var Flickity = require('flickity');

// make Flickity a jQuery plugin
Flickity.setJQuery( $ );
jQueryBridget( 'flickity', Flickity, $ );
// now you can use $().flickity()
var $carousel = $('.carousel').flickity({...});
```

{{! ----------------------------------------------------------------- }}

<h3>Browserify</h3>

<p>Follow <a href="#webpack">Webpack instructions</a>. Then run <code>browserify</code>.</p>

``` bash
browserify main.js -o bundle.js
```

{{! ----------------------------------------------------------------- }}

<h3>RequireJS</h3>

<p>Flickity supports <a href="http://requirejs.org/">RequireJS</a>.</p>

<p>You can require <code>flickity.pkgd.js</code>.</p>

``` js
requirejs( [
  'path/to/flickity.pkgd.js',
], function( Flickity ) {
  var flkty = new Flickity( '.carousel', {...});
});
```

<p>Install and require add-on features for <code>imagesLoaded</code>, <code>asNavFor</code>, <code>fullscreen</code>, <code>bgLazyLoad</code>, and <code>hash</code>.</p>

``` js
requirejs( [
  'path/to/flickity.pkgd.js',
  'path/to/flickity-imagesloaded/flickity-imagesloaded.js',
  'path/to/flickity-fullscreen/fullscreen.js',
], function( Flickity ) {
  var flkty = new Flickity( '.carousel', {
    imagesLoaded: true,
    fullscreen: true,
  });
});
```

<p>To use Flickity as a jQuery plugin with RequireJS and <code>flickity.pkgd.js</code>, you need to call <a href="https://www.npmjs.com/package/jquery-bridget">jQuery Bridget</a>.</p>

``` js
// require the require function
requirejs( [ 'require', 'jquery', 'path/to/flickity.pkgd.js' ],
  function( require, $, Flickity ) {
    // require jquery-bridget, it's included in flickity.pkgd.js
    require( [ 'jquery-bridget/jquery-bridget' ],
    function( jQueryBridget ) {
      // make Flickity a jQuery plugin
      jQueryBridget( 'flickity', Flickity, $ );
      // now you can use $().flickity()
      var $carousel = $('.carousel').flickity({...});
    }
  );
});
```

<p>Or, you can manage dependencies with npm or Bower. Set <code>baseUrl</code> to the packages folder and set a config path for all your application code.</p>

``` js
requirejs.config({
  baseUrl: 'node_modules/',
  paths: {
    app: '../'
  }
});

requirejs( [
  'flickity/js/index',
  'app/my-component.js'
], function( Flickity, myComp ) {
  var flkty = new Flickity( '.carousel', {...});
});
```

<p>To use Flickity as a jQuery plugin with RequireJS and a package manager, you need to install and call <a href="https://github.com/desandro/jquery-bridget">jQuery Bridget</a>.</p>

``` js
requirejs.config({
  baseUrl: 'node_modules/',
  paths: {
    jquery: 'jquery/jquery'
  }
});

requirejs( [
    'jquery',
    'flickity/js/index',
    'jquery-bridget/jquery-bridget'
  ],
  function( $, Flickity ) {
    // make Flickity a jQuery plugin
    $.bridget( 'flickity', Flickity, $ );
    // now you can use $().flickity()
    var $carousel = $('.carousel').flickity({...});
});
```

{{! ----------------------------------------------------------------- }}

<h2>Browser support</h2>

<p>Flickity v2.1 supports Chrome 33+, Safari 9+ (mobile &amp; desktop), IE11+, Edge 12+, and Firefox 23+.</p>

<p>For IE8+ and Android 2.3+ support, try <a href="http://flickity.metafizzy.co/v1/">Flickity v1</a>.</p>

{{! ----------------------------------------------------------------- }}

<h2>Upgrading from v1</h2>

<p>Flickity v2 dropped browser support for IE8, IE9, and Android 2.3. Nearly all options, methods, and code for Flickity v1 is backwards compatibile with Flickity v2.</p>

<h3>Breaking changes</h3>

<ul>
  <li>
    <p><a href="events.html">jQuery events</a> are namespaced with <code>.flickity</code>.</p>
    ``` js
    // v1, will not work with v2
    $carousel.on( 'staticClick', function() {...})
    // v2, add .flickity namespace
    $carousel.on( 'staticClick.flickity', function() {...})
    ```
  </li>
  <li><code>jquery-bridget/jquery.bridget</code> path renamed to <code>jquery-bridget/jquery-bridget</code></li>
</ul>

<h3>Compatible changes</h3>

<ul>
  <li><a href="events.html#select"><code>select</code> event</a> added in place of <code>cellSelect</code>. <code>cellSelect</code> event will continue to work.</li>
  <li><a href="index.html#initialize-with-html">HTML initialization</a> can be done with <code>data-flickity</code>. Flickity v2 is backwards compatible with previous code: <code>js-flickity</code> class and <code>data-flickity-options</code> attribute.</li>
  <li>IE8 helper dependencies removed: eventie, get-style-property, doc-ready</li>
</ul>

<h3>New features</h3>

<ul>
  <li><a href="options.html#groupcells">groupCells</a> - group cells together as individual slides</li>
  <li><a href="options.html#adaptiveheight">adaptiveHeight</a> - change carousel height to selected cell</li>
  <li><a href="options.html#bglazyload">bgLazyLoad</a> - lazyload background images</li>
  <li><a href="events.html#scroll">scroll event</a> - do cool stuff like progress bars and parallax effects</li>
  <li><a href="options.html#dragthreshold">dragThreshold</a> - add more wiggle room for touch vertical scrolling</li>
</ul>

{{! ----------------------------------------------------------------- }}

<h2>Issues</h2>

<h3>Reduced test cases</h3>

<p>Creating a <strong>reduced test case</strong> is the best way to debug problems and report issues. Read <a href="https://css-tricks.com/reduced-test-cases/">CSS Tricks</a> on why they&rsquo;re so great.</p>

<p>Create a reduced test case for Flickity by forking any one of the <a href="https://codepen.io/desandro/pens/tags/?grid_type=list&selected_tag=flickity-docs&sort_order=asc">CodePen demos</a> from these docs.</p>

<ul>
  <li>A reduced test case clearly demonstrates the bug or issue.</li>
  <li>It contains the bare minimum HTML, CSS, and JavaScript required to demonstrate the bug.</li>
  <li>A link to your production site is <b>not</b> a reduced test case.</li>
</ul>

<p>Creating a reduced test case is the best way to get your issue addressed. They help you point out the problem. They help us debug the problem. They help others understand the problem.</p>

{{! ----------------------------------------------------------------- }}

<h3>Submitting issues</h3>

<p>Report <a href="https://github.com/metafizzy/flickity/issues/">issues on GitHub</a>. Make sure to include a <strong>reduced test case</strong>. Without a reduced test case, your issue may be closed.</p>

{{! ----------------------------------------------------------------- }}

<h3>Feature requests</h3>

<p>Help us select new features by looking over <a href="https://github.com/metafizzy/flickity/labels/feature%20request">requested features on the GitHub issue tracker</a> and adding your <strong>👍 reaction</strong> to features you&rsquo;d like to see added.</p>

{{! ----------------------------------------------------------------- }}
